name: Windows/Linux/MacOS

on:
  push:
    branches: [master]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu, macos, windows]
        config: [Release]
        include:
          - nul: /dev/null
          - runs-on: macos
            os-name: macos
          - runs-on: windows
            os-name: windows
            exe: .exe
          - runs-on: ubuntu
            os-name: linux

    runs-on: ${{matrix.runs-on}}-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v1
      with:
        submodules: true
        fetch-depth: 1

    - name: Build project
      run: make release

    - name: Test project
      run: make test
      continue-on-error: true

    - name: Upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{matrix.os-name}}-convbin
        path: bin/convbin${{matrix.exe}}

  coverity-scan:
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, 'coverity')"
    steps:
      - name: Checkout project
        uses: actions/checkout@v1
        with:
          submodules: true
          fetch-depth: 1

      - name: Download Coverity Build Tool
        run: |
          wget -q https://scan.coverity.com/download/cxx/linux64 --post-data "token=$TOKEN&project=mateoconlechuga%2Fconvbin" -O cov-analysis-linux64.tar.gz
          mkdir cov-analysis-linux64
          tar xzf cov-analysis-linux64.tar.gz --strip 1 -C cov-analysis-linux64
        env:
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}

      - name: Build project with cov-build
        run: |
          export PATH=`pwd`/cov-analysis-linux64/bin:$PATH
          cov-build --dir cov-int make release

      - name: Submit project build to Coverity Scan
        run: |
          tar czvf convbin.tgz cov-int
          curl \
            --form token=$TOKEN \
            --form email="matthewwaltzis@gmail.com" \
            --form file=@convbin.tgz \
            --form version="Major Release" \
            --form description="`./bin/convbin -v`" \
            https://scan.coverity.com/builds?project=mateoconlechuga%2Fconvbin
        env:
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}

  codeql-scan:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true
        fetch-depth: 1

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: cpp
        config-file: ./.github/codeql/codeql-config.yml

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

  codiga-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Check code meets quality standards
      id: codiga
      uses: codiga/github-action@master
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        codiga_api_token: ${{ secrets.CODIGA_API_TOKEN }}
        min_quality_grade: 'WARNING'
        min_quality_score: '50'
        max_defects_rate: '0.2'
        max_complex_functions_rate: '0.0001'
        max_long_functions_rate: '0.0001'
        project_name: 'github-action-example'
        max_timeout_sec: '600'

